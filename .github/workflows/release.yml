name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  id-token: write
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run tests
        run: bun test

  build-binaries:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            target: node18-macos-x64
            name: macos-x64
          - os: macos-latest
            target: node18-macos-arm64
            name: macos-arm64
          - os: ubuntu-latest
            target: node18-linux-x64
            name: linux-x64
          - os: ubuntu-latest
            target: node18-linux-arm64
            name: linux-arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build bundle
        run: bun run build:bundle

      - name: Build binary for ${{ matrix.name }}
        run: npx pkg dist-bundle/index.js --targets ${{ matrix.target }} --output ocsight-${{ matrix.name }}

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: ocsight-${{ matrix.name }}
          path: ocsight-${{ matrix.name }}
          retention-days: 1

  release:
    needs: build-binaries
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
          cache: "npm"

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Download all binary artifacts
        uses: actions/download-artifact@v4
        with:
          path: binaries

      - name: Create release archives
        run: |
          mkdir -p release-artifacts
          cd binaries
          for binary in ocsight-*; do
            if [[ "$binary" == *"macos"* ]]; then
              zip "../release-artifacts/ocsight-darwin-${binary#ocsight-macos-}.zip" "$binary"
            else
              zip "../release-artifacts/ocsight-linux-${binary#ocsight-linux-}.zip" "$binary"
            fi
          done
          ls -la ../release-artifacts/

      - name: Semantic Release
        run: bun run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
