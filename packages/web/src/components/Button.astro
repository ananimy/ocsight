---
export interface Props {
  variant?: 'default' | 'primary' | 'destructive'
  disabled?: boolean
  type?: 'button' | 'submit' | 'reset'
  href?: string
  size?: 'sm' | 'md' | 'lg'
  class?: string
}

const { variant = 'default', disabled = false, type = 'button', href, size = 'md', class: className = '' } = Astro.props

const base = 'inline-flex items-center justify-center gap-2 border border-border font-mono font-medium uppercase tracking-wide transition-all focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-foreground focus-visible:ring-offset-background';
const variants = {
  default: 'bg-background text-foreground hover:bg-muted',
  primary: 'bg-foreground text-background hover:opacity-90',
  destructive: 'bg-destructive text-destructive-foreground hover:opacity-90',
} as const;
const sizes = {
  sm: 'px-3 py-2 text-xs',
  md: 'px-4 py-2 text-sm',
  lg: 'px-5 py-3 text-base',
} as const;

const styles = [base, variants[variant], sizes[size], className].filter(Boolean).join(' ');
---

{href ? (
  <a
    href={href}
    data-slot="button"
    data-variant={variant}
    data-size={size}
    class={styles}
  >
    <slot />
  </a>
) : (
  <button
    data-slot="button"
    data-variant={variant}
    data-size={size}
    type={type}
    disabled={disabled}
    class={styles}
  >
    <slot />
  </button>
)}
